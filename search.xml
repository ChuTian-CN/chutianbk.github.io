<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>关于Windows的一些特性</title>
      <link href="/2019/12/26/03/"/>
      <url>/2019/12/26/03/</url>
      
        <content type="html"><![CDATA[<h2 id="部分图片看不清可右键新建标签页查看"><a href="#部分图片看不清可右键新建标签页查看" class="headerlink" title="部分图片看不清可右键新建标签页查看"></a>部分图片看不清可右键新建标签页查看</h2><h2 id="一、先介绍两条命令吧"><a href="#一、先介绍两条命令吧" class="headerlink" title="一、先介绍两条命令吧"></a>一、先介绍两条命令吧</h2><h3 id="1-query-user命令"><a href="#1-query-user命令" class="headerlink" title="1.query user命令"></a>1.<code>query user</code>命令</h3><p>查询用户命令：<code>query user</code>在输入这一条命令后，会显示计算机机名或域，后面跟用户名。</p><p><img src="https://i.bmp.ovh/imgs/2019/12/f8533952d1dce9ab.png" alt="图片看不清可右键新建查看"></p><h3 id="2-第二条-tscon切换会话命令"><a href="#2-第二条-tscon切换会话命令" class="headerlink" title="2.第二条 tscon切换会话命令"></a>2.第二条 <code>tscon</code>切换会话命令</h3><p>Windows系统下，tscon可被用来切换远程桌面的会话。正常情况下，切换会话时需要提供登录密码，但通过特殊的利用方法能够绕过验证，不输入密码实现未授权登录。该命令具体用法如下</p><h2 id="二、使用场景一"><a href="#二、使用场景一" class="headerlink" title="二、使用场景一"></a>二、使用场景一</h2><p><img src="https://i.bmp.ovh/imgs/2019/12/2c5a1b9870b31df1.png" alt></p><p>先创建一个用户，然后远程桌面登录到新创建的用户。</p><p>使用<code>query user</code>查询已登录的用户。</p><p><img src="https://i.bmp.ovh/imgs/2019/12/ac34eed257e76464.png" alt></p><p>接着使用<code>tscon ID号 /PASSWORD:该ID所对应的密码</code>进行切换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">tscon 2 &#x2F;PASSWORD:*******</span></pre></td></tr></table></figure><p><img src="https://i.bmp.ovh/imgs/2019/12/686ae647fcd40201.png" alt></p><p>回车之后，就切换到了<code>administrator</code>的远程桌面</p><p><img src="https://i.bmp.ovh/imgs/2019/12/0ae84e9f6e5e2adf.png" alt></p><h2 id="三、使用场景二"><a href="#三、使用场景二" class="headerlink" title="三、使用场景二"></a>三、使用场景二</h2><p>由于Windows的一些特性，若是在System权限执行同样的命令的时候，将会绕过输入密码的过程。</p><p><img src="https://i.bmp.ovh/imgs/2019/12/c00afe3540eaeb83.png" alt="图片看不清可右键新建查看"></p><p>可见上图执行失败了，虽然是以管理员权限运行的CMD，但是还是以<code>chutian</code>这个用户名去打开的，并不是System权限。需要进行更进一步的提权。</p><h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>这里使用的是incognito提权（还有很多其他方法，自行百度，不一一举例了）</p><p><img src="https://i.bmp.ovh/imgs/2019/12/9c3a427f9af86c02.png" alt></p><p>使用System权限进行切换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">tscon ‘ID号’</span></pre></td></tr></table></figure><p><img src="https://i.bmp.ovh/imgs/2019/12/403f62d2c1a4682f.png" alt></p><p>可见，无需输入密码，直接切换了</p><p><img src="https://i.bmp.ovh/imgs/2019/12/462ef774e2a84b49.png" alt></p><h2 id="四、使用场景三"><a href="#四、使用场景三" class="headerlink" title="四、使用场景三"></a>四、使用场景三</h2><p>比如在渗透过程中，可以利用辅助工具管理器后门（如放大镜后门）绕过系统登陆界面</p><p>通过注册表劫持实现后门，修改注册表的命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">REG ADD &quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\utilman.exe&quot; &#x2F;t REG_SZ &#x2F;v Debugger &#x2F;d &quot;C:\windows\system32\cmd.exe&quot; &#x2F;f</span></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/12/26/lAQnUI.png" alt></p><p>使用快捷键<code>win+u</code>调出CMD窗口</p><p><img src="https://s2.ax1x.com/2019/12/26/lAlrfP.png" alt></p><p>两个会话都可以切换</p><p><img src="https://s2.ax1x.com/2019/12/26/lAlH6U.md.png" alt></p><p>成功进入</p><p><img src="https://s2.ax1x.com/2019/12/26/lA1VAA.png" alt></p><h2 id="五、备注："><a href="#五、备注：" class="headerlink" title="五、备注："></a>五、备注：</h2><p>所使用的提权软件：</p><p>链接：<a href="https://pan.baidu.com/s/1WsCczfnmKue0t5P0_STmNw" target="_blank" rel="noopener">https://pan.baidu.com/s/1WsCczfnmKue0t5P0_STmNw</a><br>提取码：kzxb<br>复制这段内容后打开百度网盘手机App，操作更方便哦</p><p><strong>软件来源于互联网，后门自测</strong></p>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>使用L2TP拨号上网</title>
      <link href="/2019/12/16/02/"/>
      <url>/2019/12/16/02/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是L2TP"><a href="#什么是L2TP" class="headerlink" title="什么是L2TP"></a>什么是L2TP</h2><p>​    L2TP是一种工业标准的Internet隧道协议，功能大致和PPTP协议类似，比如同样可以对网络数据流进行加密。不过也有不同之处，比如PPTP要求网络为IP网络，L2TP要求面向数据包的点对点连接；PPTP使用单一隧道，L2TP使用多隧道；L2TP提供包头压缩、隧道验证，而PPTP不支持。</p><h2 id="如何搭建IPsec-VPN"><a href="#如何搭建IPsec-VPN" class="headerlink" title="如何搭建IPsec VPN"></a>如何搭建IPsec VPN</h2><p>1.首先需要购买一个VPS服务器（必须要是linux的），我这里用的是VULTR的，操作系统装Ubuntu 和 Debian，或者CentOS.</p><p><img src="https://i.bmp.ovh/imgs/2019/12/658f5495ad257cab.png" alt></p><p>2.使用一键部署脚本</p><p>Ubuntu and Debian.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;git.io&#x2F;vpnsetup -O vpnsetup.sh &amp;&amp; sudo sh vpnsetup.sh</span></pre></td></tr></table></figure><p>CentOS.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;git.io&#x2F;vpnsetup-centos -O vpnsetup.sh &amp;&amp; sudo sh vpnsetup.sh</span></pre></td></tr></table></figure><p>慢慢等待自动部署。</p><p>成功后的效果图：</p><p><img src="https://i.bmp.ovh/imgs/2019/12/35df2bb229cb234b.png" alt></p><p>将后面4项全部复制出来保存好<code>Server IP:</code> <code>IPsec PSK:</code> <code>Username:</code> <code>Password:</code></p><h2 id="Windows设置VPN拨号"><a href="#Windows设置VPN拨号" class="headerlink" title="Windows设置VPN拨号"></a>Windows设置VPN拨号</h2><p>打开<code>网络和Internet设置</code>➡VPN➡添加VPN连接</p><p><img src="https://i.bmp.ovh/imgs/2019/12/c253f9a6128caba4.png" alt></p><p>接下来在VPN提供商选择<code>Windows内置</code>，VPN类型选择<code>使用预共享密钥的L2TP/IPsec</code>，然后连接名称随便填，服务器名称或地址填VPS的IP，密钥：<code>IPsec PSK:</code>,然后加上<code>username</code>和<code>password</code>.（就是上面保存的）。都填完后选择保存。</p><p><img src="https://i.bmp.ovh/imgs/2019/12/3aa6b642c85700fd.png" alt></p><p>接下来在右下角找到连接就可以拨号VPN了</p><p><img src="https://i.bmp.ovh/imgs/2019/12/4c267f6c7aaed118.png" alt></p><h2 id="连接问题"><a href="#连接问题" class="headerlink" title="连接问题"></a>连接问题</h2><p>第一次拨号可能会出现失败的情况，需要修改注册表解决</p><p>将下复制：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\RasMan\Parameters]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&quot;ProhibitIpSec&quot;&#x3D;dword:00000000</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\PolicyAgent]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&quot;AssumeUDPEncapsulationContextOnSendRule&quot;&#x3D;dword:00000002</span></pre></td></tr></table></figure><p>放到记事本，并将后缀改为<code>.reg</code></p><p><img src="https://i.bmp.ovh/imgs/2019/12/e808e0b21d2d1305.png" alt></p><p>管理员权限运行，再次进行拨号就可拨上了</p><h2 id="成功连接"><a href="#成功连接" class="headerlink" title="成功连接"></a>成功连接</h2><p><img src="https://i.bmp.ovh/imgs/2019/12/ed82cb7e6849c0b8.png" alt></p><p>GitHub地址：<a href="https://github.com/hwdsl2/setup-ipsec-vpn/blob/master/README-zh.md" target="_blank" rel="noopener">https://github.com/hwdsl2/setup-ipsec-vpn/blob/master/README-zh.md</a></p>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>看我如何拿下BC站的服务器</title>
      <link href="/2019/12/10/01/"/>
      <url>/2019/12/10/01/</url>
      
        <content type="html"><![CDATA[<h2 id="一、信息收集"><a href="#一、信息收集" class="headerlink" title="一、信息收集"></a>一、信息收集</h2><p>拿到目标网站，可见是一个很常规的bc站。</p><p>先进行简单的信息收集，通过Wappalyzer插件可见php版本与windows serve这两个比较重要的信息</p><p><img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210120110.png" alt></p><p>命令行<code>nslookup</code>+<code>url</code>查看ip,发现没有CDN</p><p> <img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210121157.png" alt> </p><p>再到爱站上看看</p><p><img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210121353.png" alt></p><p>嗯，柬埔寨可还行</p><p>知道ip地址后端口扫描一波（全端口扫描+服务探测。这个过程比较漫长，可以先干别的）</p><p><img src="https://s2.ax1x.com/2019/12/10/QDig76.md.png" alt>   </p><p>在扫描之余尝试3389连接远程桌面（因为开始已经看到是windows serve的服务器）</p><p>   <img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210122700.png" alt></p><p>试了两次，猜测是修改端口了，或者是登录ip白名单？</p><h2 id="二、后台爆破"><a href="#二、后台爆破" class="headerlink" title="二、后台爆破"></a>二、后台爆破</h2><p>回到web，反手在url后面加一个admin</p><p>   <img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210123122.png" alt></p><p>后台出来了，这bc有点水啊，随手测了几个弱口令，无果</p><p>发现没有验证码校验，抓包爆破一波  </p><p><img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210131048.png" alt></p><p>通常找一些常规的弱口令进行爆破就够了</p><p><img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210131203.png" alt></p><p>秒出密码：123456，我吐了，他们运维可能要被打死</p><p> <img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210131428.png" alt></p><p><img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210131631.png" alt></p><h2 id="三、寻找上传点"><a href="#三、寻找上传点" class="headerlink" title="三、寻找上传点"></a>三、寻找上传点</h2><p>这么简单就拿下了后台，我们当然不会满足。</p><p>大致浏览了一下后台的各个功能，寻找可以利用的地方，在系统管理处找到一处上传点</p><p><img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210132139.png" alt></p><p> （有没有表哥发收款码过来，暴富的机会来了！）</p><p>随便写一个一句话，并将后缀改成<code>.jpg</code>并且抓包发送到<code>Repeater</code>查看</p><p><img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210132602.png" alt></p><p>提示“<strong>不是真正的图片类型</strong>” ，在包内改成php后缀，提示非法文件类型</p><p><img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210133132.jpg" alt></p><p>感觉是白名单+文件头校验，尝试图片马</p><p><img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210133436.png" alt></p><p>尝试了几波，白名单限制得很死，没绕过去</p><p>顿时陷入了僵局，还是另外寻找突破口吧</p><h2 id="四、峰回路转"><a href="#四、峰回路转" class="headerlink" title="四、峰回路转"></a>四、峰回路转</h2><p>认真想了一下，它是Windows，而Windows的主流建站工具，<code>宝塔</code>，<code>护卫神</code>，<code>phpstudy</code>，<code>upupw</code>。之前看到它的php版本是<code>5.2.17</code>，正好想到前段时间爆出的phpstudy的2个后门，后门存在于<code>php-5.4.45</code>和<code>php-5.2.17</code>两个版本中。马上测试一波</p><p><img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210134018.png" alt></p><p><img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210134058.png" alt></p><p>请求包中<code>Accept-Encoding: gzip, deflate</code>,将<code>gzip,deflate</code>中间的空格删掉</p><p>并在下面加上一句：<code>Accept-Charset:</code>+<code>所执行命令的base64编码</code></p><p>我惊呆了，真的是用phpstudy建站的，这站长心也太大了吧,接下来的事情就好办多了。</p><h2 id="五、蚁剑无文件shell连接之"><a href="#五、蚁剑无文件shell连接之" class="headerlink" title="五、蚁剑无文件shell连接之"></a>五、蚁剑无文件shell连接之</h2><p><img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210135028.png" alt>   </p><p>编码器记得改成<code>base64</code></p><p>然后将一句话进行<code>base64</code>编码，复制到 <code>Accept-Charset:</code>后面</p><p> <img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210135143.png" alt></p><p>修改蚁剑内的请求信息，处<code>Header</code>头修改如图下</p><p><img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210135533.png" alt></p><p>测试连接，成功连接上</p><p><img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210135625.png" alt></p><p><img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210135645.png" alt></p><p>发现直接是SYSTEM权限，这就好玩了</p><h2 id="六、上传mimikatz抓取Hash"><a href="#六、上传mimikatz抓取Hash" class="headerlink" title="六、上传mimikatz抓取Hash"></a>六、上传mimikatz抓取Hash</h2><p><img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210135810.png" alt></p><p>新建目录，上传<code>winrar.exe</code> +<code>mimikatz</code></p><p><img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210135952.png" alt></p><p>使用上传的winrar解压，命令：<code>winrar.exe e x64.rar</code></p><p>   <img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210140236.png" alt></p><p>运行<code>mimi.bat</code>,这里说一下下图后面最好加上一个<code>exit</code>，不然的话mimikatz会不断的写日志，导致log文件越来越大,当时就犯了这样一个错误</p><p><img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210140344.png" alt></p><p><img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210140724.png" alt></p><p>将生成的<code>mimikatz.log</code>复制到网站根目录下,然后去查看</p><p> <img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210140909.png" alt></p><p>成功抓到管理员的RDP的密码。</p><p>回头看看之前扫的全端口也扫好了</p><p><img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210141041.png" alt>                                       </p><p>可见总共开了三个端口，一般更改了3389端口  用nmap扫描加 <code>-sV</code>参数后，扫出的rdp服务,一般service会显示为 <code>ssl/unknown</code>.</p><p>尝试远程桌面连接</p><p><img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210141153.png" alt></p><p>嘻嘻，成功登录，拿下服务器，随即点了根烟，将所有证据打包好，掏出了手机拨打110</p><h2 id="七、总结"><a href="#七、总结" class="headerlink" title="七、总结"></a>七、总结</h2><p>在我们拿下webshell的时候，想要获取数据或者源码往往会用菜刀或者蚁剑去打包，但是这个时候往往就会出现很多问题，列如打包失败，或者是打包得不完整等等。</p><p>这个时候如果对方是windows服务器的话，我们可以将我们本地装的<code>winrar.exe</code>上传过去</p><p><img src="https://raw.githubusercontent.com/chutianbk/chutianbk.github.io/master/2019/12/10/01/20191210142212.png" alt></p><p>压缩盘下的dat文件夹，并且命名为bat.rar<br><code>winrar.exe a -ag -k -r -s -ibck c:/bak.rar c:/dat/</code></p><p>压缩多个文件<br><code>winrar a -ag -ibck bak.rar filename1 filename2 filename....</code></p><p>参数说明：<br><code>a</code> :备份所有文件；<br><code>-ag</code> :当创建压缩文件时，以格式“YYYYMMDDHHMMSS”附加当前日期字符串,文件名bakYYYYMMDDHHMMSS.rar；<br><code>-k</code> :锁定压缩文件；<br><code>-r</code>:备份目录和子目录；<br><code>-s</code> :创建固实压缩文件；<br><code>-ibck</code>:后台运行；</p><p><code>filename1</code>：要压缩的文件名，可以多个，也可用通配符<code>file*</code></p>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/12/09/hello-world/"/>
      <url>/2019/12/09/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo server</span></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo generate</span></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
